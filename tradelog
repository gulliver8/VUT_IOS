#!/bin/sh

export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

print_help(){
  echo "Usage:    tradelog [-h|--help]"
  echo "          tradelog [FILTER] [COMMAND] [LOG [LOG2 [...]]"
  echo "                   "
  echo "Commands: list-tick"
  echo "          profit"
  echo "          pos"
  echo "          last-price"
  echo "          hist-ord"
  echo "          graph-pos"
  echo "                     "
  echo "Filters:  -a DATETIME"
  echo "          -b DATETIME"
  echo "          -t TICKER"
  echo "          -w WIDTH"
}

COMMAND=""
WIDTH=""
TICKER=""
DATETIME_A="0000-00-00 00:00:00"
DATETIME_B="9999-99-99 99:99:99"
LOGFILES=""
LOGFILES_GZ=""
INPUT=""
FILTER_INPUT=""
OUTPUT=""

while [ "$#" -gt 0 ]
do
  case "$1" in
  -h | --help)
    print_help
    exit 0
    ;;
  list-tick | profit | pos | last-price | hist-ord | graph-pos)
    COMMAND="$1"
    shift
    ;;
  -w)
    if [ "$WIDTH" == "" ];then
      WIDTH="$2"
      shift
      shift
    else
      exit 1
    fi
    ;;
  -a)
    DATETIME_A="$2"
    shift
    shift
    ;;
  -b)
    DATETIME_B="$2"
    shift
    shift
    ;;
  -t)
    TICKER="$2|$TICKER"
    shift
    shift
    ;;
  *.gz)
    LOGFILES_GZ="$1 $LOGFILES_GZ"
    shift
    ;;
  *.log)
    LOGFILES="$1 $LOGFILES"
    shift
    ;;
  esac
done

if [ "$LOGFILES_GZ" != "" ];then
  INPUT="$(gzip -d -c $LOGFILES_GZ | cat $LOGFILES - | sort)"
else
  if [ "$LOGFILES" != "" ]; then
    INPUT=$(cat $LOGFILES)
  else
    INPUT=$(cat)
  fi
fi
FILTER_INPUT=$(echo "$INPUT" | awk -v aft="$DATETIME_A" -v bfr="$DATETIME_B" -F ';' '{if ($1 > aft && $1 < bfr) {print $0}}')
if [ "$TICKER" != "" ];then
  FILTER_INPUT=$(echo "$FILTER_INPUT" | awk -v tck="$TICKER" 'BEGIN = split(tck, tick)}
  {for(i=1; i<=x;i++) if(tick[i] == $2) {print $0}}')
fi
case "$COMMAND" in
  list-tick)
  OUTPUT=$(echo "$FILTER_INPUT" | awk -F ';' '{print $2}' | sort -u)
    ;;
  profit)
  OUTPUT=$(echo "$FILTER_INPUT" | awk -F ';' '{if($3 == "buy"){b += $4 * $6}if($3 == "sell"){s += $4 * $6}} END {s -= b; printf("%.2f",s)}')
    ;;
  pos)
  OUTPUT=$(echo "$FILTER_INPUT" | awk -F ';' '{if($3 == "buy"){ticks[$2] += $6}if($3 == "sell"){ticks[$2] -= $6}if($1 > lastdate[$2]){lastdate[$2] = $1; ;lastprice[$2]=$4}}END{ for (tick in ticks){printf("%s %.1f\n",tick,ticks[tick]*lastprice[tick])} }' )
    ;;
  last-price)
    ;;
  hist-ord)
    ;;
  graph-pos)
    ;;
  *)
  OUTPUT="$FILTER_INPUT"
    ;;
esac

echo "$OUTPUT"
